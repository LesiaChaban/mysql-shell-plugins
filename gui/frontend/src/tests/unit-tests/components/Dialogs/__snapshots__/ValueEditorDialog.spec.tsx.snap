// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Value Editor Dialog output tests Value Editor Dialog (Snapshot) 1 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body
    theme="dark"
  >
    <div
      __self="[object Object]"
      __source="[object Object]"
      class="msg portal"
      id="testDialog"
    >
      <div
        __self="[object Object]"
        __source="[object Object]"
        class="msg dialog visible valueEditDialog"
      >
        <div
          __self="[object Object]"
          __source="[object Object]"
          class="title verticalCenterContent"
        >
          <div
            __self="[object Object]"
            __source="[object Object]"
            class="msg icon codicon codicon-terminal"
          />
          <label
            __self="[object Object]"
            __source="[object Object]"
            class="msg label"
            data-tooltip="expand"
          >
            Enter a name for the new theme
          </label>
        </div>
        <div
          __self="[object Object]"
          __source="[object Object]"
          class="content fixedScrollbar"
        >
          <div
            __self="[object Object]"
            __source="[object Object]"
            class="msg grid"
            style="grid-template-columns: repeat(8, 1fr); row-gap: 16px; column-gap: 16px;"
          >
            <div
              __self="[object Object]"
              __source="[object Object]"
              class="msg container fixedScrollbar gridCell"
              style="flex-direction: column; justify-content: flex-start; align-items: stretch; grid-column: span 8;"
            >
              <label
                __self="[object Object]"
                __source="[object Object]"
                class="msg label valueTitle"
                data-tooltip="expand"
              >
                input
              </label>
              <div
                __self="[object Object]"
                __source="[object Object]"
                class="msg container fixedScrollbar inputWithProgress"
                style="flex-direction: row;"
              >
                <input
                  __self="[object Object]"
                  __source="[object Object]"
                  class="msg input valueEditor"
                  id="input"
                  spellcheck="true"
                  type="text"
                />
              </div>
            </div>
          </div>
        </div>
        <div
          __self="[object Object]"
          __source="[object Object]"
          class="footer verticalCenterContent unselectable"
        >
          <div
            __self="[object Object]"
            __source="[object Object]"
            class="msg container fixedScrollbar leftItems"
            style="flex-direction: row;"
          />
          <div
            __self="[object Object]"
            __source="[object Object]"
            class="msg container fixedScrollbar rightItems"
            style="flex-direction: row-reverse;"
          >
            <button
              __self="[object Object]"
              __source="[object Object]"
              caption="OK"
              class="msg button"
              id="ok"
            >
              OK
            </button>
            <button
              __self="[object Object]"
              __source="[object Object]"
              caption="Cancel"
              class="msg button"
              id="cancel"
            >
              Cancel
            </button>
          </div>
        </div>
      </div>
    </div>
    <div />
  </body>,
  "container": <div />,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
