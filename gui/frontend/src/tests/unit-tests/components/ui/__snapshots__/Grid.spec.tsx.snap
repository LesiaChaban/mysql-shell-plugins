// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Grid component test Test Grid output (snapshot) 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body
    theme="dark"
  >
    <div>
      <div
        __self="[object Object]"
        __source="[object Object]"
        class="msg grid"
        id="loginDialogControls"
        style="grid-template-columns: 220px 40px; column-gap: 8px;"
      >
        <div
          __self="[object Object]"
          __source="[object Object]"
          class="msg container fixedScrollbar gridCell"
          style="flex-direction: row;"
        >
          <input
            __self="[object Object]"
            __source="[object Object]"
            class="msg input"
            id="loginUsername"
            placeholder="Username"
            spellcheck="true"
            type="text"
          />
        </div>
        <div
          __self="[object Object]"
          __source="[object Object]"
          class="msg gridCell"
          style="grid-row: span 2; grid-column: span 2;"
        />
        <div
          __self="[object Object]"
          __source="[object Object]"
          class="msg container fixedScrollbar gridCell"
          style="flex-direction: row;"
        >
          <input
            __self="[object Object]"
            __source="[object Object]"
            class="msg input"
            id="loginPassword"
            placeholder="Password"
            spellcheck="true"
            type="password"
          />
        </div>
        <div
          __self="[object Object]"
          __source="[object Object]"
          class="msg container fixedScrollbar gridCell"
          style="flex-direction: row;"
        >
          <button
            __self="[object Object]"
            __source="[object Object]"
            class="msg button round"
            id="loginButton"
          >
            <div
              __self="[object Object]"
              __source="[object Object]"
              class="msg icon"
              style="mask-image: url(chevron-right.svg);"
            />
          </button>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      __self="[object Object]"
      __source="[object Object]"
      class="msg grid"
      id="loginDialogControls"
      style="grid-template-columns: 220px 40px; column-gap: 8px;"
    >
      <div
        __self="[object Object]"
        __source="[object Object]"
        class="msg container fixedScrollbar gridCell"
        style="flex-direction: row;"
      >
        <input
          __self="[object Object]"
          __source="[object Object]"
          class="msg input"
          id="loginUsername"
          placeholder="Username"
          spellcheck="true"
          type="text"
        />
      </div>
      <div
        __self="[object Object]"
        __source="[object Object]"
        class="msg gridCell"
        style="grid-row: span 2; grid-column: span 2;"
      />
      <div
        __self="[object Object]"
        __source="[object Object]"
        class="msg container fixedScrollbar gridCell"
        style="flex-direction: row;"
      >
        <input
          __self="[object Object]"
          __source="[object Object]"
          class="msg input"
          id="loginPassword"
          placeholder="Password"
          spellcheck="true"
          type="password"
        />
      </div>
      <div
        __self="[object Object]"
        __source="[object Object]"
        class="msg container fixedScrollbar gridCell"
        style="flex-direction: row;"
      >
        <button
          __self="[object Object]"
          __source="[object Object]"
          class="msg button round"
          id="loginButton"
        >
          <div
            __self="[object Object]"
            __source="[object Object]"
            class="msg icon"
            style="mask-image: url(chevron-right.svg);"
          />
        </button>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
